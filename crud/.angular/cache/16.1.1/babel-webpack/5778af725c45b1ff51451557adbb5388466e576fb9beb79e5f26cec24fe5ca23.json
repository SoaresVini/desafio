{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.API = 'http://localhost:3000/users';\n  }\n  buscar() {\n    return this.http.get(this.API);\n  }\n  criar(user) {\n    return this.http.post(this.API, user);\n  }\n  editar(user) {\n    const url = `${this.API}/${user.id}`;\n    return this.http.put(url, user);\n  }\n  buscarUser(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.get(url);\n  }\n  deletar(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.delete(url);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserService","constructor","http","API","buscar","get","criar","user","post","editar","url","id","put","buscarUser","deletar","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/joinin/project/desafio/crud/src/app/service/user-service.service.ts"],"sourcesContent":["import { User } from './../model/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly API = 'http://localhost:3000/users'\n\n  constructor(private http: HttpClient) {\n   }\n\n  buscar(): Observable<User[]> {\n    return this.http.get<User[]>(this.API)\n  }\n\n  criar(user: User): Observable<User> {\n    return this.http.post<User>(this.API, user)\n  }\n\n  editar(user: User): Observable<User>{\n    const url = `${this.API}/${user.id}`\n    return this.http.put<User>(url, user)\n  }\n\n  buscarUser(id: number): Observable<User>{\n    const url = `${this.API}/${id}`\n    return this.http.get<User>(url)\n  }\n\n  deletar(id: number): Observable<User>{\n    const url = `${this.API}/${id}`\n    return this.http.delete<User>(url)\n  }\n\n\n\n}\n\n\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,GAAG,GAAG,6BAA6B;EAGnD;EAEDC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,GAAG,CAAC;EACxC;EAEAG,KAAKA,CAACC,IAAU;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,GAAG,EAAEI,IAAI,CAAC;EAC7C;EAEAE,MAAMA,CAACF,IAAU;IACf,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACP,GAAG,IAAII,IAAI,CAACI,EAAE,EAAE;IACpC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAOF,GAAG,EAAEH,IAAI,CAAC;EACvC;EAEAM,UAAUA,CAACF,EAAU;IACnB,MAAMD,GAAG,GAAG,GAAG,IAAI,CAACP,GAAG,IAAIQ,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAOK,GAAG,CAAC;EACjC;EAEAI,OAAOA,CAACH,EAAU;IAChB,MAAMD,GAAG,GAAG,GAAG,IAAI,CAACP,GAAG,IAAIQ,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACa,MAAM,CAAOL,GAAG,CAAC;EACpC;;AA5BWV,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}