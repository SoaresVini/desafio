{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { validatorTelefone } from './validatorTelefone';\nimport { validatorData } from './validatorData';\nexport let CadastroUserComponent = class CadastroUserComponent {\n  constructor(service, route, router, formBuilder) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.formulario = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      age: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      birthday: ['', [Validators.required, validatorData]],\n      phoneNumber: ['', [validatorTelefone]],\n      address: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.service.buscarUser(parseInt(id)).subscribe(user => {\n        Object.keys(user).forEach((key, value) => {\n          this.formulario.get(key)?.setValue(user[key]);\n        });\n        // this.formulario.get(\"name\")?.setValue(user.name);\n        // this.formulario = this.formBuilder.group({\n        //   id:[id],\n        //   name:[user.name],\n        //   age: [user.age],\n        //   birthday:[user.birthday],\n        //   phoneNumber:[user.phoneNumber],\n        //   address: [user.address]\n        // })\n      });\n\n      this.edit = true;\n    } else {\n      this.edit = false;\n    }\n  }\n  usuario() {\n    this.aniversario();\n    if (!this.edit) {\n      if (this.formulario.valid) {\n        const user = {};\n        this.service.criar(user).subscribe(() => {\n          this.router.navigate(['/listarUsers']);\n        });\n      }\n    } else {\n      if (this.formulario.valid) {\n        const user = {\n          id: this.formulario.get(\"id\")?.value\n        };\n        this.service.editar(user).subscribe(() => {\n          this.router.navigate(['/listarUsers']);\n        });\n      }\n    }\n  }\n  aniversario() {\n    const date = new Date();\n    const data = this.formulario.controls['birthday']?.value;\n    const dataAniversario = new Date(data);\n    const idade = date.getFullYear() - dataAniversario.getFullYear();\n    this.formulario.controls['age'].setValue(idade);\n  }\n};\nCadastroUserComponent = __decorate([Component({\n  selector: 'app-cadastro-user',\n  templateUrl: './cadastro-user.component.html',\n  styleUrls: ['./cadastro-user.component.scss']\n})], CadastroUserComponent);","map":{"version":3,"names":["Component","FormControl","Validators","validatorTelefone","validatorData","CadastroUserComponent","constructor","service","route","router","formBuilder","formulario","group","name","required","minLength","age","validators","birthday","phoneNumber","address","ngOnInit","id","snapshot","paramMap","get","buscarUser","parseInt","subscribe","user","Object","keys","forEach","key","value","setValue","edit","usuario","aniversario","valid","criar","navigate","editar","date","Date","data","controls","dataAniversario","idade","getFullYear","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/joinin/project/desafio/crud/src/app/componentes/users/cadastro-user/cadastro-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { filter } from 'rxjs';\nimport { UserService } from 'src/app/service/user-service.service';\nimport { validatorTelefone } from './validatorTelefone'\nimport { User } from 'src/app/model/user';\nimport { validatorData } from './validatorData';\n\n@Component({\n  selector: 'app-cadastro-user',\n  templateUrl:'./cadastro-user.component.html',\n  styleUrls: ['./cadastro-user.component.scss']\n})\nexport class CadastroUserComponent implements OnInit{\n\n formulario = this.formBuilder.group({\n      name:['',[\n        Validators.required,\n        Validators.minLength(2)\n      ]],\n      age: new FormControl<number | null>(null, { validators:[Validators.required]}),\n      birthday:['', [Validators.required, validatorData]],\n      phoneNumber:['',[validatorTelefone]]  \n      ,\n      address: ['', [Validators.required]]\n    })\n  private edit! : boolean\n\n  constructor(\n    private service: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ){}\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    if(id){\n      this.service.buscarUser(parseInt(id!)).subscribe((user: any | User) => {\n\n        Object.keys(user).forEach((key: string, value) =>{\n          this.formulario.get(key)?.setValue(user[key])\n        })\n        // this.formulario.get(\"name\")?.setValue(user.name);\n\n        // this.formulario = this.formBuilder.group({\n        //   id:[id],\n        //   name:[user.name],\n        //   age: [user.age],\n        //   birthday:[user.birthday],\n        //   phoneNumber:[user.phoneNumber],\n        //   address: [user.address]\n        // })\n      }\n    )\n    this.edit = true\n    }else{\n      this.edit = false\n    }\n\n  }\n\nusuario(){\n  \n  this.aniversario()\n  if(!(this.edit)){\n    if(this.formulario.valid){\n      const user = {\n    } as User;\n\n      this.service.criar(user).subscribe(() => {\n        this.router.navigate(['/listarUsers'])\n      })\n  }\n  }else{\n    if(this.formulario.valid){\n      const user = {\n        id: this.formulario.get(\"id\")?.value\n      } as User;\n      this.service.editar(user).subscribe(() => {\n        this.router.navigate(['/listarUsers'])\n      })\n  }\n  }\n}\n\naniversario(){\n\n  const date = new Date();\n  const data = this.formulario.controls['birthday']?.value!;\n  const dataAniversario = new Date(data)\n\n  \n  const idade:number = date.getFullYear() - dataAniversario.getFullYear()\n\n  this.formulario.controls['age'].setValue(idade)\n\n\n}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}