{"ast":null,"code":"export function validatorTelefone(control) {\n  const telefone = control.value;\n  // Remova todos os caracteres não numéricos do número de telefone\n  const telefoneNumerico = telefone.replace(/\\D/g, '');\n  // Verifique se o número de telefone tem o comprimento adequado\n  if (telefoneNumerico.length < 10 || telefoneNumerico.length > 11) {\n    return {\n      telefone: true\n    };\n  }\n  // Verifique se o número de telefone começa com o DDD correto\n  const ddd = telefoneNumerico.slice(0, 2);\n  const dddValidos = ['47', '11', '48']; // Exemplo de DDDs válidos\n  if (!dddValidos.includes(ddd)) {\n    return {\n      telefone: true\n    };\n  }\n  // Se o número de telefone estiver em um formato válido\n  // e passar por todas as verificações, retorne null (válido)\n  return null;\n}","map":{"version":3,"names":["validatorTelefone","control","telefone","value","telefoneNumerico","replace","length","ddd","slice","dddValidos","includes"],"sources":["/home/joinin/project/desafio/crud/src/app/componentes/users/cadastro-user/validatorTelefone.ts"],"sourcesContent":["import { TemplateLiteral } from \"@angular/compiler\";\nimport { AbstractControl } from \"@angular/forms\";\n\nexport function validatorTelefone(control: AbstractControl): { [key: string]: any } | null {\n  const telefone = control.value as string;\n\n  // Remova todos os caracteres não numéricos do número de telefone\n  const telefoneNumerico = telefone.replace(/\\D/g, '');\n\n  // Verifique se o número de telefone tem o comprimento adequado\n  if (telefoneNumerico.length < 10 || telefoneNumerico.length > 11) {\n    return { telefone: true };\n  }\n\n  // Verifique se o número de telefone começa com o DDD correto\n  const ddd = telefoneNumerico.slice(0, 2);\n  const dddValidos = ['47', '11', '48',]; // Exemplo de DDDs válidos\n  if (!dddValidos.includes(ddd)) {\n    return { telefone: true };\n  }\n\n  // Se o número de telefone estiver em um formato válido\n  // e passar por todas as verificações, retorne null (válido)\n  return null;\n}"],"mappings":"AAGA,OAAM,SAAUA,iBAAiBA,CAACC,OAAwB;EACxD,MAAMC,QAAQ,GAAGD,OAAO,CAACE,KAAe;EAExC;EACA,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAEpD;EACA,IAAID,gBAAgB,CAACE,MAAM,GAAG,EAAE,IAAIF,gBAAgB,CAACE,MAAM,GAAG,EAAE,EAAE;IAChE,OAAO;MAAEJ,QAAQ,EAAE;IAAI,CAAE;;EAG3B;EACA,MAAMK,GAAG,GAAGH,gBAAgB,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACxC,MAAMC,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC,CAAC;EACxC,IAAI,CAACA,UAAU,CAACC,QAAQ,CAACH,GAAG,CAAC,EAAE;IAC7B,OAAO;MAAEL,QAAQ,EAAE;IAAI,CAAE;;EAG3B;EACA;EACA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}